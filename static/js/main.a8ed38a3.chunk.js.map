{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","setAlert","message","setTimeout","document","body","setInterval","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8ed38a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n//import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n             {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/*<li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n    </li>*/}\r\n              \r\n              \r\n            </ul>\r\n         { /*  <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\"htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.propTypes={\r\n    title:propTypes.string.isRequired,\r\n    about:propTypes.string.isRequired\r\n\r\n} \r\nNavbar.defaultProps={\r\n    title:\"Set Title here\",\r\n    about:\"About us here\"\r\n} ","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n    const handleupClick=()=>{\r\n        \r\n        //console.log(\"uppercase was clicked\"+ text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to upper case\",\"success\")\r\n    }\r\n    const handleloClick=()=>{\r\n    \r\n        //console.log(\"uppercase was clicked\"+ text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to lower case\",\"success\")\r\n    }\r\n    const handleclrClick=()=>{\r\n    \r\n        //console.log(\"uppercase was clicked\"+ text);\r\n        let newText='';\r\n        setText(newText)\r\n    }\r\n   \r\n    \r\n    const handleOnChange=(event)=>{\r\n       // console.log(\"onchange\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text,setText]= useState(\"enter ur text here\");\r\n//text=\"newtext\"wrong way to chaange\r\n//setText(\"newText\");//correct way to cahnge\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n\r\n            <h1>{props.heading}</h1>\r\n        \r\n<div className=\"mb-3\">\r\n \r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange}id=\"mybox\" rows=\"8\" style={{backgroundColor: props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleupClick}>Convert to upper case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to lower case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleclrClick}>Clear case</button>\r\n\r\n\r\n</div>\r\n<div className=\"container my-3 \" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n    <h1> YOUR text summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").length} Minutes  read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter ur text to preview\"}</p>\r\n   \r\n</div>\r\n</>\r\n      \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                 <strong> {capitalize (props.alert.type)}</strong>:{props.alert.msg}\r\n\r\n                 \r\n</div>\r\n        \r\n    )\r\n}\r\n","\n\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n//import {\n  //BrowserRouter as Router,\n  //Switch,\n  //Route\n  \n//} from \"react-router-dom\";*/}\n\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000) }\n  const toggleMode=()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor='#042743'\n    showAlert(\"Dark mode has been enabled\",\"success\")\n    document.title=\" textutils-Darkmode\"\n    setInterval(()=>{\n    document.title=\"Textutils is amazing\";\n    },2000)\n    setInterval(()=>{\n      document.title=\"Install Textutils now\";\n    },1500)\n  }\n    \n    else {\n    setMode('light');\n    document.body.style.backgroundColor='white'\n    showAlert(\"light mode has been enabled\",\"success\")\n    document.title=\" textutils-lightmode\"\n    }\n\n  }\n  return (\n   <>\n \n{/*<Navbar title=\"Textutils\" mode={mode} about=\"About textutils\"/>*/}\n{/*<Router>*/}\n<Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={ alert}/>\n<div class=\"container my-3\">\n \n{/*<Switch>\n          <Route exact \n          path=\"/about\">\n            <About />\n          </Route>\n<Route exact path=\"/\">*/}\n            <TextForm heading= \" Enter the text to analyze\" showAlert={showAlert} mode={mode} />\n         {/* </Route>*/}\n        </div>\n       {/* </Switch>*/}\n      \n\n\n\n{/*</Router>*/}\n\n\n</>\n );\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}